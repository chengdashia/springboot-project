server:
  port: 9081
spring:
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  datasource:
    username: root               #数据库的用户名
    password: mysql729           #数据库的密码
    url: jdbc:mysql://localhost:3306/cloud_disk?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai   #url
    driver-class-name: com.mysql.cj.jdbc.Driver             #数据库的驱动
    type: com.alibaba.druid.pool.DruidDataSource
    #数据源其他配置
    #初始化时建立物理连接的个数
    initial-size: 5
    #最小连接池数量
    min-idle: 5
    #最大连接池数量 maxIdle已经不再使用
    max-active: 20
    #获取连接时最大等待时间，单位毫秒
    max-wait: 60000
    #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    #既作为检测的间隔时间又作为testWhileIdel执行的依据
    time-between-eviction-runs-millis: 60000
    #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
    min-evictable-idle-time-millis: 30000
    #用来检测连接是否有效的sql 必须是一个查询语句
    #mysql中为 select 'x'
    #oracle中为 select 1 from dual
    validation-query: select 'x'
    #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-borrow: false
    #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-return: false
    # 是否缓存preparedStatement
    pool-prepared-statements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
    #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
    filters: stat,wall,slf4j
    max-pool-prepared-statement-per-connection-size: 20
    use-global-data-source-stat: true
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

# redis
  redis:
    database: 0             #redis 数据库索引（默认为0）
    host: 10.111.43.55   #redis 服务器地址
    port: 6379              #redis 服务器连接端口号
    password:               #redis 服务器连接密码  默认为空
    lettuce:
      pool:
        max-active: 8        # 连接池最大连接数(使用负值表示没有限制） 默认8
        max-wait: -1         #连接池最大阻塞等待时间（使用负值表示没有限制） 默认-1
        max-idle: 8          #连接池最大空闲连接 默认8
        min-idle: 0          #连接池最小空闲连接 默认 0
    timeout: 3000
  application:
    name: cloudDisk
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 1000MB

mybatis-plus:
  configuration:
    call-setters-on-nulls: true                             #如果map查出字段为空，也显示
    #org.apache.ibatis.logging.stdout.StdOutImpl 控制台打印sql语句方便调试sql语句执行错误
    #org.apache.ibatis.logging.log4j2.Log4j2Impl:这个不在控制台打印查询结果,但是在log4j中打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true                          #下划线转驼峰
  mapper-locations: classpath:/mapper/xml/*Mapper.xml
  type-aliases-package: com.example.cloudDisk.pojo
  global-config:
    db-config:
      logic-delete-value: 0
      logic-not-delete-value: 1


# Sa-Token配置
sa-token:
  jwt-secret-key: "bigDataStudio666##@@&#*#"
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false


txsms:
  AppId: 1400640150
  AppKey: 40c489c1430ead6d313f17ffee4859a1
  TemplateId: 1323547
  signName: "董博阳成大事个人网"


## 指定log4j2作为日志记录
#logging:
#  config: classpath:log4j2-dev.xml
#  level:
#    #这个指定你的dao层，也就是mapper文件的所在包
#    com.example.springboot.mapper: DEBUG
#    com.baomidou.mybatisplus: debug
knife4j:
  # 开启增强配置
  enable: true
  # 开启Swagger的Basic认证功能,默认是false
  basic:
    enable: true
    # Basic认证用户名
    username: test
    # Basic认证密码
    password: 123
  cors: true